// services/news.js (ESM version)
const express = require("express");
const { getNews } = require("../services/newsService");
const router = express.Router();

// --- L·∫•y tin t·ª©c theo query (GET /news?q=...&limit=20&since=24h) ---
router.get("/", async (req, res) => {
  try {
    const { q, limit, since } = req.query;
    if (!q || q.trim().length < 2) {
      return res.status(400).json({ error: "Thi·∫øu ho·∫∑c query qu√° ng·∫Øn (q)" });
    }

    const max = Math.min(parseInt(limit, 10) || 20, 50); // m·∫∑c ƒë·ªãnh 20, t·ªëi ƒëa 50
    const articles = await getNews(q, max, since);

    res.locals.source = "news";
    res.locals.group = "external";

    console.info(`üì° GET /news?q=${q}&limit=${max}&since=${since || "none"} ‚Üí ${articles.length} tin`);

    res.json({
      success: true,
      source: "news",
      group: "external",
      query: q,
      since: since || null,
      count: articles.length,
      articles
    });
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y tin t·ª©c:", err.message);

    res.locals.source = "news";
    res.locals.group = "external";

    res.status(500).json({
      success: false,
      source: "news",
      group: "external",
      error: "Kh√¥ng th·ªÉ l·∫•y tin t·ª©c",
      details: err.message
    });
  }
});

// --- H·ªèi tin t·ª©c b·∫±ng POST (POST /news { question: "...", limit: 30, since: "24h" }) ---
router.post("/", async (req, res) => {
  try {
    const { question, limit, since } = req.body;
    if (!question || question.trim().length < 2) {
      return res.status(400).json({ error: "Thi·∫øu ho·∫∑c c√¢u h·ªèi qu√° ng·∫Øn" });
    }

    const max = Math.min(parseInt(limit, 10) || 20, 50);
    const articles = await getNews(question, max, since);

    res.locals.source = "news";
    res.locals.group = "external";

    console.info(`üì° POST /news { question="${question}", limit=${max}, since=${since || "none"} } ‚Üí ${articles.length} tin`);

    res.json({
      success: true,
      source: "news",
      group: "external",
      question,
      since: since || null,
      count: articles.length,
      articles
    });
  } catch (err) {
    console.error("‚ùå L·ªói x·ª≠ l√Ω c√¢u h·ªèi tin t·ª©c:", err.message);

    res.locals.source = "news";
    res.locals.group = "external";

    res.status(500).json({
      success: false,
      source: "news",
      group: "external",
      error: "Kh√¥ng th·ªÉ x·ª≠ l√Ω c√¢u h·ªèi",
      details: err.message
    });
  }
});

// --- L·∫•y tin t·ª©c m·ªõi nh·∫•t (GET /news/latest?limit=20&since=24h) ---
router.get("/latest", async (req, res) => {
  try {
    const { limit, since } = req.query;
    const max = Math.min(parseInt(limit, 10) || 20, 50); // m·∫∑c ƒë·ªãnh 20, t·ªëi ƒëa 50

    const articles = await getNews("", max, since);

    res.locals.source = "news";
    res.locals.group = "external";

    console.info(`üì° GET /news/latest?limit=${max}&since=${since || "none"} ‚Üí ${articles.length} tin`);

    res.json({
      success: true,
      source: "news",
      group: "external",
      latest: true,
      since: since || null,
      count: articles.length,
      articles
    });
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y tin t·ª©c m·ªõi nh·∫•t:", err.message);

    res.locals.source = "news";
    res.locals.group = "external";

    res.status(500).json({
      success: false,
      source: "news",
      group: "external",
      error: "Kh√¥ng th·ªÉ l·∫•y tin t·ª©c m·ªõi nh·∫•t",
      details: err.message
    });
  }
});

module.exports = router;